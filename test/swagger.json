{
  "swagger" : "2.0",
  "info" : {
    "description" : "Knuckles REST API",
    "version" : "1.0.0",
    "title" : "Simple Inventory API"
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  }, {
    "name" : "tasks",
    "description" : "Task related operations"
  }, {
    "name" : "auth",
    "description" : "Authentication related operations"
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/login" : {
      "post" : {
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "tags" : [ "auth" ],
        "summary" : "user login",
        "operationId" : "userLogin",
        "description" : "Allows a user to login to the portal (and to the BPM server)",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "formData",
          "name" : "username",
          "description" : "username",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "formData",
          "name" : "password",
          "description" : "password",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful login",
            "schema" : {
              "type" : "object",
              "properties" : {
                "token" : {
                  "type" : "string",
                  "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
                }
              }
            }
          },
          "400" : {
            "description" : "username or password not supplied"
          },
          "401" : {
            "description" : "incorrect username or password"
          }
        }
      }
    },
    "/logout" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "user logout",
        "operationId" : "userLogout",
        "description" : "Allows a user to logout from the portal (and from the BPM server)",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful logout"
          }
        }
      }
    },
    "/tasks" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "get all tasks",
        "operationId" : "getAllTasks",
        "description" : "Retrieves all tasks for the currently signed in user",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "tasks for the logged in user",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TaskSummary"
              }
            }
          },
          "401" : {
            "description" : "The user is not authorized to get tasks",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "The requested content type or content encoding is not supported",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "An internal error occured",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tasks/{id}" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "get specific task by id",
        "operationId" : "getTaskById",
        "description" : "Retrieves the details for a specific task\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "task ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "tasks for the logged in user",
            "schema" : {
              "$ref" : "#/definitions/TaskDetail"
            }
          },
          "400" : {
            "description" : "The parameters are not valid or are missing",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "The user is not authorized to get this task details",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "The task does not exist",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "The requested content type or content encoding is not supported",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "An internal error occured",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tasks/{id}/claim" : {
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "claims a specific task",
        "operationId" : "claimTaskById",
        "description" : "Claims a specific task for the current user and retrieves its details\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "task ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "tasks for the logged in user",
            "schema" : {
              "$ref" : "#/definitions/TaskSummary"
            }
          }
        }
      }
    },
    "/tasks/{id}/complete" : {
      "put" : {
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "tags" : [ "tasks" ],
        "summary" : "finishes a task",
        "operationId" : "completeTask",
        "description" : "Marks a task as finished, providing the data that the BPM system expects\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "task ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "tasks for the logged in user",
            "schema" : {
              "$ref" : "#/definitions/TaskSummary"
            }
          }
        }
      }
    },
    "/tasks/{id}/save" : {
      "put" : {
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "tags" : [ "tasks" ],
        "summary" : "finishes a task",
        "operationId" : "saveTaskState",
        "description" : "Marks a task as finished, providing the data that the BPM system expects\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "task ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "tasks for the logged in user",
            "schema" : {
              "$ref" : "#/definitions/TaskSummary"
            }
          }
        }
      }
    },
    "/inventory" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches inventory",
        "operationId" : "searchInventory",
        "description" : "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "pass an optional search string for looking up inventory",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 50
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TaskSummary"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "adds an inventory item",
        "operationId" : "addInventory",
        "description" : "Adds an item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Inventory item to add",
          "schema" : {
            "$ref" : "#/definitions/TaskSummary"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        }
      }
    }
  },
  "definitions" : {
    "BaseResponse" : {
      "type" : "object",
      "required" : [ "status" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : 200,
          "minimum" : 100,
          "maximum" : 600
        }
      }
    },
    "Error" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BaseResponse"
      }, {
        "type" : "object",
        "properties" : {
          "errorType" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "details" : {
            "type" : "object"
          }
        }
      } ]
    },
    "TaskPriorityValue" : {
      "type" : "string",
      "example" : "HIGH",
      "enum" : [ "VERY_HIGH", "HIGH", "MEDIUM", "LOW", "VERY_LOW" ]
    },
    "TaskPriorityDescription" : {
      "type" : "string",
      "example" : "High",
      "enum" : [ "Very High", "High", "Medium", "Low", "Very Low" ]
    },
    "TaskState" : {
      "type" : "string",
      "example" : "INACTIVE",
      "enum" : [ "CLAIMED", "FINISHED", "INACTIVE", "RUNNING", "SUSPENDED", "TERMINATED" ]
    },
    "TaskSummary" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BaseResponse"
      }, {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "int32",
            "example" : 76503
          },
          "state" : {
            "$ref" : "#/definitions/TaskState"
          },
          "taskStatus" : {
            "type" : "string",
            "example" : "Received"
          },
          "subject" : {
            "type" : "string",
            "example" : "My Task"
          },
          "priority" : {
            "$ref" : "#/definitions/TaskPriorityValue"
          },
          "dueOn" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "isAtRisk" : {
            "type" : "boolean",
            "example" : false
          },
          "assignedTo" : {
            "type" : "string",
            "example" : "user1"
          },
          "activityName" : {
            "type" : "string",
            "example" : "My Task"
          },
          "instanceId" : {
            "type" : "string",
            "format" : "int32",
            "example" : 12123
          },
          "instanceName" : {
            "type" : "string",
            "example" : "My Process:1"
          }
        }
      } ]
    },
    "TaskDetail" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BaseResponse"
      }, {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "int32",
            "example" : 76503
          },
          "state" : {
            "$ref" : "#/definitions/TaskState"
          },
          "taskStatus" : {
            "type" : "string",
            "example" : "Received"
          },
          "subject" : {
            "type" : "string",
            "example" : "My Task"
          },
          "description" : {
            "type" : "string",
            "example" : "My Description"
          },
          "priority" : {
            "$ref" : "#/definitions/TaskPriorityValue"
          },
          "priorityDescription" : {
            "$ref" : "#/definitions/TaskPriorityDescription"
          },
          "assignedTo" : {
            "type" : "string",
            "example" : "user1"
          },
          "assignedToDescription" : {
            "type" : "string",
            "example" : "User 1"
          },
          "assignedToType" : {
            "type" : "string",
            "example" : "user",
            "enum" : [ "user", "group" ]
          },
          "originator" : {
            "type" : "string",
            "example" : "bpmadmin"
          },
          "activityName" : {
            "type" : "string",
            "example" : "My Task"
          },
          "activityDescription" : {
            "type" : "string",
            "example" : "My Description"
          },
          "instanceId" : {
            "type" : "string",
            "format" : "int32",
            "example" : 12123
          },
          "instanceName" : {
            "type" : "string",
            "example" : "My Process:1"
          },
          "dueOn" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "lastModifiedOn" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "startedOn" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "completedOn" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "implementingServiceId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "7b6eb16f-68a2-475c-8166-8e83cc7e3b08"
          },
          "implementingServiceSnapshot" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "065598e5-e9e2-4138-8b2f-1125debe7f2b"
          },
          "data" : {
            "type" : "object"
          },
          "processData" : {
            "type" : "object"
          }
        }
      } ]
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/tigermarques/Knuckles/1.0.0"
}